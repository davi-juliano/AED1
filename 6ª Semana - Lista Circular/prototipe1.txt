#include <stdio.h>
#include <stdlib.h>
#include <string.h>

typedef struct lista{
    int indice;
    int sumcard;
    struct lista* prox;
}TLista;
typedef TLista* PLista;

void aloca_lista(PLista p){
  p=(PLista)malloc(sizeof(TLista));
  return;
}

PLista Novo(PLista Primeiro , int valor, int i){
    PLista aux;
    aloca_lista(aux);
    aux->sumcard=valor;
    aux->indice=i;
    aux->prox=Primeiro;

    return aux;
}

void insere_circular(PLista lista, int valor, int i){
    PLista aux=lista;
    PLista aux2;

    while(aux->prox!=lista){
      aux=aux->prox;
    }
      
    aux2=Novo(aux->prox, valor, i);
    aux->prox=aux2;
    return;
}

PLista remove_valor(PLista lista, int valor){
    PLista aux=lista;
    PLista ant=lista;

    if(lista->sumcard == valor){ //Remoção vinda do início
        while(aux->prox!=lista){
            aux=aux->prox;
        }

        aux->prox=lista->prox;
        free(lista);
        aux=aux->prox;
        return aux;
    }

    while(aux->sumcard!=valor){
        if(aux!=lista){
            ant=ant->prox;
        }
        aux=aux->prox;
        
        if(aux==lista){
            return lista;
        }
    }
    ant->prox=aux->prox;
    free(aux);
    return lista;
}

int compara_21(PLista lista){
  PLista p;
  int valor;

  if (lista !=NULL){
    p = lista->prox;
    do {
      if(p->sumcard > 21){
        printf("O jogador %d ultrapassou 21! Eliminado!", p->indice);
        lista = remove_valor(lista, p->sumcard);
        return 0;
      }
      if(p->sumcard == 21){
        printf("Jogador vencedor: %d. Pontuação: %d\n", p->indice, p->sumcard);
        return 1;
      }
      p = p->prox;
    } while (p != lista->prox);
  }


}

void imprime_circular(PLista ultimo) {
  PLista p;
  int i = 0;
  printf("Situação da Lista:");
  if (ultimo !=NULL){
    p = ultimo->prox;
    do {
      printf("Jogador = %d pontuacao = %d\n", i, p->sumcard);
      p = p->prox;
      i++;
    } while (p != ultimo->prox);
  }
}

int compara_carta(char c[]){
  int valor;
  char carta[2];
  
    if(strcmp(c, "A") == 0){
      valor = 11;
      return valor;
    }
    if(strcmp(c, "K") == 0){
      valor = 10;
      return valor;
    }
    if(strcmp(c, "J") == 0){
      valor = 10;
      return valor;
    }
    if(strcmp(c, "Q") == 0){
      valor = 10;
      return valor;
    }
    if(strcmp(c, "10") == 0){
      valor = 10;
      return valor;
    }
    if(strcmp(c, "9") == 0){
      valor = 9;
      return valor;
    }
    if(strcmp(c, "8") == 0){
      valor = 8;
      return valor;
    }
    if(strcmp(c, "7") == 0){
      valor = 7;
      return valor;
    }
    if(strcmp(c, "6") == 0){
      valor = 6;
      return valor;
    }
    if(strcmp(c, "5") == 0){
      valor = 5;
      return valor;
    }
    if(strcmp(c, "4") == 0){
      valor = 4;
      return valor;
    }
    if(strcmp(c, "3") == 0){
      valor = 3;
      return valor;
    }
    if(strcmp(c, "2") == 0){
      valor = 2;
      return valor;
    }
    else{
    printf("Valor Inválido!! Digite um novo valor:");
    scanf("%s", &carta);
    valor = compara_carta(carta);
    return valor;
    }
}

PLista adiciona_valor(PLista lista, int i, char c[]){
  PLista p;
  while(lista->indice !=i){
    p = lista->prox;
  }    
  p->sumcard = p->sumcard + compara_carta(c) ;
  return p;
}

int main(){
    int valor, jogadores, i;
    PLista lista;
    char c[2];

    aloca_lista(lista);

    printf("Digite a quantidade de jogadores");
    scanf("%d", &jogadores);

    for(i=0;i<jogadores;i++){
      printf("Digite uma carta (numero de 2 a 10 ou as letras A, J, K ou Q):");
      scanf("%s", &c);
      valor = compara_carta(c);
      printf("%d", valor);

      insere_circular(lista, valor, i);
    }

    i=0;

    do{
      printf("Digite uma carta (numero de 2 a 10 ou as letras A, J, K ou Q):");
      scanf("%s", &c);

      lista = adiciona_valor(lista, i, c);
      i++;
      
      if(i%jogadores == 0){
        imprime_circular(lista);
        i=0;
      }
      
    }while(compara_21(lista) != 1);


    return 0;

}